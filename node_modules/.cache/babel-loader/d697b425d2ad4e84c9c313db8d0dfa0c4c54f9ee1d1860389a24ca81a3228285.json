{"ast":null,"code":"var _jsxFileName = \"/Users/sagarjha/Desktop/shopping-project/Azur-Shopping-Application/src/Pay.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Button } from './components/reusable_styled/Reusable.Styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst publishableStripeKey = \"pk_test_51MH1kMSHriqitrpZ9wzffFCtudBTZqeAWtNlloNOUSdgGVhYV4HzBVPbmKsX4lOGGt2J2eSfbpP9IZTyoFWfYUxv0056vxnuZt\";\nfunction Pay() {\n  _s();\n  const [stripeToken, setStripeToken] = useState(null);\n  //this function will get token when our paymnent stripe form is sent with success\n  const onToken = token => {\n    setStripeToken(token);\n  };\n  useEffect(() => {\n    const makeRequest = async () => {\n      try {\n        const res = await axios.post(\"http://localhost:5000/api/checkout/payment\",\n        //providing token that we get after successful data sent from react-stripe-checkout & amt\n        {\n          tokenId: stripeToken.id,\n          amount: 50000\n        });\n        console.log(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    //if stripetoken true then call makeRequest()\n    stripeToken && makeRequest();\n  }, [stripeToken]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StripeCheckout, {\n      name: \"AZURE\",\n      image: \"logo\",\n      billingAddress: true,\n      shippingAddress: true,\n      description: \"Your total amount is $500\",\n      amount: 50000,\n      token: onToken\n      // stripeKey=\"my_PUBLISHABLE_stripekey\"\n      ,\n      stripeKey: publishableStripeKey,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(Pay, \"mdlBtHJ9ds9jLCl1xMxCGcsjZ3s=\");\n_c = Pay;\nexport default Pay;\nvar _c;\n$RefreshReg$(_c, \"Pay\");","map":{"version":3,"names":["axios","React","useState","useEffect","StripeCheckout","Button","publishableStripeKey","Pay","stripeToken","setStripeToken","onToken","token","makeRequest","res","post","tokenId","id","amount","console","log","data","error"],"sources":["/Users/sagarjha/Desktop/shopping-project/Azur-Shopping-Application/src/Pay.jsx"],"sourcesContent":["import axios from 'axios'\nimport React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport StripeCheckout from 'react-stripe-checkout'\nimport { Button } from './components/reusable_styled/Reusable.Styled'\n\nconst publishableStripeKey = \"pk_test_51MH1kMSHriqitrpZ9wzffFCtudBTZqeAWtNlloNOUSdgGVhYV4HzBVPbmKsX4lOGGt2J2eSfbpP9IZTyoFWfYUxv0056vxnuZt\"\n\nfunction Pay() {\n    const [stripeToken,setStripeToken] = useState(null)\n    //this function will get token when our paymnent stripe form is sent with success\n    const onToken = (token)=>{\n        setStripeToken(token);\n    }\n\n   useEffect(()=>{\n     const makeRequest = async ()=>{\n        try {\n           const res = await axios.post(\n            \"http://localhost:5000/api/checkout/payment\",\n           //providing token that we get after successful data sent from react-stripe-checkout & amt\n           {\n            tokenId:stripeToken.id,\n            amount:50000,\n           }\n           )\n           console.log(res.data)\n        } catch (error) {\n            console.log(error)\n        }\n     };\n     //if stripetoken true then call makeRequest()\n     stripeToken && makeRequest();\n    },[stripeToken]\n   )\n\n  return (<>\n  <StripeCheckout\n  name='AZURE'\n  image='logo'\n  billingAddress\n  shippingAddress\n  description='Your total amount is $500'\n  amount={50000}\n    token={onToken}\n    // stripeKey=\"my_PUBLISHABLE_stripekey\"\n    stripeKey={publishableStripeKey}\n\n\n  >\n   <Button>Pay</Button>\n   </StripeCheckout>\n  </>\n  )\n}\n\nexport default Pay"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,cAAc,MAAM,uBAAuB;AAClD,SAASC,MAAM,QAAQ,8CAA8C;AAAA;AAAA;AAErE,MAAMC,oBAAoB,GAAG,6GAA6G;AAE1I,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACnD;EACA,MAAMQ,OAAO,GAAIC,KAAK,IAAG;IACrBF,cAAc,CAACE,KAAK,CAAC;EACzB,CAAC;EAEFR,SAAS,CAAC,MAAI;IACZ,MAAMS,WAAW,GAAG,YAAU;MAC3B,IAAI;QACD,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC3B,4CAA4C;QAC7C;QACA;UACCC,OAAO,EAACP,WAAW,CAACQ,EAAE;UACtBC,MAAM,EAAC;QACR,CAAC,CACA;QACDC,OAAO,CAACC,GAAG,CAACN,GAAG,CAACO,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACtB;IACH,CAAC;IACD;IACAb,WAAW,IAAII,WAAW,EAAE;EAC7B,CAAC,EAAC,CAACJ,WAAW,CAAC,CACf;EAEF,oBAAQ;IAAA,uBACR,QAAC,cAAc;MACf,IAAI,EAAC,OAAO;MACZ,KAAK,EAAC,MAAM;MACZ,cAAc;MACd,eAAe;MACf,WAAW,EAAC,2BAA2B;MACvC,MAAM,EAAE,KAAM;MACZ,KAAK,EAAEE;MACP;MAAA;MACA,SAAS,EAAEJ,oBAAqB;MAAA,uBAIjC,QAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAa;MAAA;MAAA;MAAA;IAAA;EACH,iBACf;AAEL;AAAC,GA9CQC,GAAG;AAAA,KAAHA,GAAG;AAgDZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}